"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Aescbc = void 0;
/**
 * Aescbc (experimental)
 * =====================
 *
 * This is a convenience class for using Aes with Cbc. This is a low-level tool
 * that does not include authentication. You should only use this if you are
 * authenticating your data somehow else.
 */
const aes_1 = require("./aes");
const cbc_1 = require("./cbc");
const random_1 = require("./random");
class Aescbc {
    static encrypt(messageBuf, cipherKeyBuf, ivBuf, concatIvBuf = true) {
        ivBuf = ivBuf || random_1.Random.getRandomBuffer(128 / 8);
        const ctBuf = cbc_1.Cbc.encrypt(messageBuf, ivBuf, aes_1.Aes, cipherKeyBuf);
        if (concatIvBuf) {
            return Buffer.concat([ivBuf, ctBuf]);
        }
        else {
            return ctBuf;
        }
    }
    static decrypt(encBuf, cipherKeyBuf, ivBuf) {
        if (!ivBuf) {
            ivBuf = encBuf.slice(0, 128 / 8);
            const ctBuf = encBuf.slice(128 / 8);
            return cbc_1.Cbc.decrypt(ctBuf, ivBuf, aes_1.Aes, cipherKeyBuf);
        }
        else {
            const ctBuf = encBuf;
            return cbc_1.Cbc.decrypt(ctBuf, ivBuf, aes_1.Aes, cipherKeyBuf);
        }
    }
}
exports.Aescbc = Aescbc;
//# sourceMappingURL=aescbc.js.map