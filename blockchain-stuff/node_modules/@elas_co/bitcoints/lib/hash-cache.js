"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HashCache = void 0;
/**
 * Hash Cache
 * ==========
 *
 * For use in sighash.
 */
const struct_1 = require("./struct");
class HashCache extends struct_1.Struct {
    constructor(prevoutsHashBuf, sequenceHashBuf, outputsHashBuf) {
        super();
        this.fromObject({ prevoutsHashBuf, sequenceHashBuf, outputsHashBuf });
    }
    fromBuffer(buf) {
        return this.fromJSON(JSON.parse(buf.toString()));
    }
    toBuffer() {
        return Buffer.from(JSON.stringify(this.toJSON()));
    }
    fromJSON(json) {
        this.prevoutsHashBuf = json.prevoutsHashBuf ? Buffer.from(json.prevoutsHashBuf, 'hex') : undefined;
        this.sequenceHashBuf = json.sequenceHashBuf ? Buffer.from(json.sequenceHashBuf, 'hex') : undefined;
        this.outputsHashBuf = json.outputsHashBuf ? Buffer.from(json.outputsHashBuf, 'hex') : undefined;
        return this;
    }
    toJSON() {
        return {
            prevoutsHashBuf: this.prevoutsHashBuf ? this.prevoutsHashBuf.toString('hex') : undefined,
            sequenceHashBuf: this.sequenceHashBuf ? this.sequenceHashBuf.toString('hex') : undefined,
            outputsHashBuf: this.outputsHashBuf ? this.outputsHashBuf.toString('hex') : undefined,
        };
    }
}
exports.HashCache = HashCache;
//# sourceMappingURL=hash-cache.js.map